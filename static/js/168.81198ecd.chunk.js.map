{"version":3,"file":"static/js/168.81198ecd.chunk.js","mappings":"kMACA,K,uCCgCA,EA5BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,QAChD,CAACR,KAGF,0BACE,eAAIS,UAAWC,EAAAA,QAAf,SACsB,IAAnBP,EAAQQ,QACP,wBACE,sEAGFR,EAAQS,KAAI,SAAAC,GAAM,OAChB,gBAAoBJ,UAAWC,EAAAA,KAA/B,WACE,uBAAIG,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG","sources":["components/Reviews/Reviews.module.css","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import style from './Reviews.module.css';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'Utils/MovieAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(data => setReviews(data));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul className={style.reviews}>\n        {reviews.length === 0 ? (\n          <p>\n            <b>We don't have any reviews for this movie</b>\n          </p>\n        ) : (\n          reviews.map(review => (\n            <li key={review.id} className={style.item}>\n              <b>{review.author}</b>\n              <p>{review.content}</p>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","data","className","style","length","map","review","author","content","id"],"sourceRoot":""}